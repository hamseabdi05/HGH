@*@model Newtonsoft.Json.Linq.JArray;*@
@using KMU.HisOrder.MVC.Models;


@{
    Layout = "/Views/Shared/_Layout.cshtml";
    //var aaa = Model.ToList();
}


@*<script src="../vendors/Chart.js/dist/Chart.min.js"></script>*@
<script src="~/lib/c3js/js/d3.js"></script>
<script src="~/lib/c3js/js/c3.js"></script>

<link href="~/lib/c3js/css/c3.css" rel="stylesheet" />

@section multipleSelect {
    <link href="~/lib/Select2/multiple-select.css" rel="stylesheet" />
    <script src="~/lib/Select2/multiple-select.min.js"></script>
}
<style>
    .ms-parent {
        padding: 0px !important;
    }
</style>
<div style="width: 100%;height: 100vh;" class="">
    <div class="col-lg-12 ">
      

        <div class="form-group row mx-0 justify-content-center"  style="margin-top: 5px;">
            <label class="titleLabel"><font color="red">*</font>Month:</label>
            <input type="number" id="SearchMonth" class="form-control col-lg-2 font-weight-bold text-center rounded" style="font-size: 10px;" value="@DateTime.Now.Month" /> &nbsp;

            <label class="titleLabel"><font color="red">*</font>Department:</label>
            <select multiple="multiple" id="SearchDept" class="col-lg-2 " style=""></select>

            <button type="button" class="btn btn-primary float-right" onclick="PatientsCountSearch()" style="font-size: 10px;margin-left:5px;">Search</button>
        </div>
    </div>
    <div class="col-lg-12 text-center blue" style="margin-bottom: 2%;">
        <span><i class="fa fa-warning" style="margin-right: 5px;"></i>Only count patients with diagnosis</span>
    </div>
    <div id="MonthDiv" class="col-lg-12" style="text-align: center;">
        <div id="LineChart" class="c3" style="max-height: 320px; position: relative;"></div>
    </div>

</div>

@section scripts{
    <script>
        let columns2 = @Json.Serialize(Model.ToString());
        columns2 = JSON.parse(columns2)
        $('#SearchDept').multipleSelect({
            selectAll: true,
            data: columns2,

        })


        let UNLOAD_ARR = ["Numbers"];
        var APPLICATION_ROOT = '@Url.Content("~/Statistic/")';
        var chart2 = c3.generate({
            bindto: "#LineChart",
            size: {
                height: 400,
                width: 1300
            },
            data: {
                x: 'x',
                columns: [
                    ['x', 'default'],
                    ['Numbers', 0]
                ], type: 'spline'
            }, axis: {

                x: {
                    type: 'category',
                    label: {
                        // text: 'Number of Visits per month',
                        text: 'Day',
                        position: 'outer-right'
                    }
                },
                y: {
                    label: {
                        text: 'Registered patients',
                        position: 'outer-top'
                    },
                    tick: {
                        // 四捨五入
                        // format: function (d) { return Math.round(d); }

                        format: function (x) {
                            return (x == Math.floor(x)) ? x : "";
                        }
                    }
                }
            }

        });

        function PatientsCountSearch() {
            let deptArr = $("#SearchDept").multipleSelect('getSelects');
            if (deptArr.length > 0 && $("#SearchMonth").val() != "") {
                let parent = $("#SearchDept").find(':selected').data('parent') == "" ? null : $("#SearchDept").find(':selected').data('parent');
                $.ajax({
                    type: 'POST',
                    url: APPLICATION_ROOT + "Daily/MonthsPatientsDataCollation",
                    data: {
                        parent: parent,
                        Month: $("#SearchMonth").val().trim(),
                        deptList: deptArr
                        //deptCode: $("#SearchDept").val()
                    },
                    async: false,
                    dataType: 'json',
                    success: function (result) {
                        //console.log(result.cloumns)
                        let c = [];
                        if (result.haveData) {
                            layer.msg('successfully', { time: 1000, icon: 1 });
                            c.push(result.categories);
                            for (var i = 0; i < result.mcloumns.length; i++) {
                                c.push(result.mcloumns[i])
                                console.log(result.mcloumn)
                            }
                            //console.log(c)
                            chart2.load({
                                columns: c
                                , unload: UNLOAD_ARR,
                            });
                            UNLOAD_ARR = result.cloumns;
                        } else {
                            layer.msg('No Data', { time: 1000, icon: 1 });
                            chart2.load({
                                columns: [
                                    ['x', 'No Data'],
                                    ['Numbers', 0]
                                ], unload: UNLOAD_ARR,
                            });
                            UNLOAD_ARR = ["Numbers"];
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        if (xhr.status == "401") {
                            alert('Unauthorized ' + thrownError + '！');
                        }
                        location.reload();
                    },
                    complete: function (XMLHttpRequest, textStatus) { }
                });


            } else {
                layer.msg("You must give Year and Department a value");
            }
        }

    </script>
}